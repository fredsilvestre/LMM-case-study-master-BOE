### CDIS Shelter test = dimension 3 (Cumulative duration in shelter)

# Prepare the working environment
getwd()
setwd("/Users/XXX")
ls()
rm(list = ls())
dev.off()


# Install and load the packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggpubr, tidyverse, DescTools, bestNormalize, lme4, lmerTest, Hmisc, data.table, lubridate, rptR, sjPlot, kableExtra, corrplot, PerformanceAnalytics, factoextra, knitr, psych, car)

library(tidyverse)
library(data.table)
library(lubridate)
library(lme4)
library(lmerTest)
library(sjPlot)
library(rptR)
library(ggpubr)
library(psych)
library(car)

# Load the data
allData <- fread("Dataset CDIS.csv", header = T, dec=",")

#Description of the variables
View(allData)


#1° Preparation of the data

#rename the variables to use
test1 <- rename(allData, c("CDIS"="Cumulative duration in shelter (s)", "ID"="Fish ID","Weight"="Fish Weight (g)", "Length"="Fish Standard length (cm)", "TempShelter"="Temperature for shelter test (°C)", "TimeShelter"="Time for shelter test (h)", "Replicate"="Replicat"))

str(test1)

#we transform into factor the non-continuous variables
test1$`ID`=as.factor(test1$`ID`)
test1$`Population`=as.factor(test1$`Population`)
test1$`Replicate`=as.factor(test1$`Replicate`)

#we transform the time variable with lubridate
test1$`TimeShelter`=parse_date_time(test1$`TimeShelter`, "HM")
test1$`TimeShelter`=as.numeric(test1$`TimeShelter`)


test1 <- na.omit(test1) #delete the rows with NA in all the columns
test1 <- test1[Population=="EPP"| Population=="Long Caye" | Population== "Long Key" | Population== "Twin Cayes"] #subset the requested populations ; not necessary if we take all the populations
test1$Population<-factor(test1$Population,levels=c("EPP","Long Key","Long Caye","Twin Cayes")) #reorder the factors


#2° Exploration of the data

test1
summary(test1)
head(test1)
describe.by(test1, group="Population")

# Average of each variable per population

table1 <- test1[,lapply(.SD, mean, na.rm=T), by=Population, .SDcols=c("Weight", "Length", "TempShelter", "TimeShelter", "CDIS")] 
table1

#Average of each variable per replicate

table2 <- test1[,lapply(.SD, mean, na.rm=T), by=Replicate, .SDcols=c("Weight", "Length", "TempShelter", "TimeShelter", "CDIS")]
table2

# Using Esquisse

devtools::install_github("dreamRs/esquisse")
esquisse::esquisser()


#3° Test ANOVA on the effect of population (on 2 or 1 replicate)

#
#
#
#
#
#
#


#4° Search for correlations between all variables

correlation <- rcorr(as.matrix(test1[,4:8]), type = "spearman") 
correlation
corrplot(correlation$r, type="upper", order="hclust", p.mat=correlation$P, sig.level=0.01, insig="blank", tl.cex=0.7  ,tl.col="black",tl.srt=45)
chart.Correlation(as.matrix(test1[,4:8]), histogram = T,pch=19)



#5° search for extreme values

dotchart(test1$CDIS, main="CDIS", group=test1$Population)


#6° variables transformation

#
#
#
#
#


bestNormalize(test1$CDIS) # > orderNorm
bestNormalize(test1$Length) # > orderNorm
bestNormalize(test1$TempShelter) # > orderNorm

CDIS <- orderNorm(test1$CDIS)
x2 <- predict(CDIS)
test1$CDIS <- x2
hist(test1$CDIS)
shapiro.test(test1$CDIS)

L <- orderNorm(test1$Length)
x3 <- predict(L)
test1$Length <- x3
hist(test1$Length)
shapiro.test(test1$Length)

TS <- orderNorm(test1$TempShelter)
x4 <- predict(TS)
test1$TempShelter <- x4
hist(test1$TempShelter)
shapiro.test(test1$TempEnv)


#7° Build the model

#
#
#
#
#
#
#

kbl <- kbl(anova)
kbl
table2 <- anova %>% kbl(caption="AOV") %>% kable_classic("striped",full_width=F) %>%
        column_spec(1, bold=T)
table2

# Run the best model with REML=TRUE

#
#
#
#
#

ranova(M7) # ti test the random effect

tab <- tab_model(M7, p.val="kr", show.df=T, show.reflvl=T, p.style="stars")
tab
save_kable(tab, file="aovCDIS.pdf") 

# Calculate the ICC by hand

#
#
#



# If we take the population effect as random (it could be any sampled population)

#
#
#
#
#


#8° Model validation

# Check for colinearity with the Variance Inflation Factor
vif(M7)

# Check for homogeneity of variance: residuals vs predicted values
plot(resid(M7)~fitted(M7), xlab="Predicted values", ylab="Normalized residuals")+
        abline(h=0, lty=2)

#Check for independence of residuals versus individual explanatory variables
op <- par(mfrow=c(2,2), mar=c(4,4,.5,.5))
plot(resid(M7)~test1$Replicate, xlab="Replicate", ylab="Normalized residuals")+
        abline(h=0, lty=2)
plot(resid(M7)~test1$Population, xlab="Population", ylab="Normalized residuals")+
        abline(h=0, lty=2)
plot(resid(M7)~test1$Length, xlab="Length", ylab="Normalized residuals")+
        abline(h=0, lty=2)
plot(resid(M7)~test1$TempShelter, xlab="TempShelter", ylab="Normalized residuals")+
        abline(h=0, lty=2)
par(op)

#Check for normality of residuals
hist(resid(M7))

qqnorm(resid(M7))
qqline(resid(M7))



#9° Model visualization

# Effects of population and replicate

plot2 <- ggplot(test1) +
        aes(x = Population, y = CDIS) +
        geom_boxplot(notch=T, fill="#a50f15") +
        theme_light() +
        stat_summary(fun=mean, geom="point", shape=23, size=4)

plot2

plot3 <- ggplot(test1) +
        aes(x = Replicate, y = CDIS) +
        geom_boxplot(notch=T, fill="#a50f15") +
        theme_light() +
        stat_summary(fun=mean, geom="point", shape=23, size=4)

plot3




#10° Calculate conditional (adjusted) repeatability for each population
#https://cran.r-project.org/web/packages/rptR/vignettes/rptR.html 

test5 <- test1[Population=="EPP"] 
rpt6 <- rpt(CDIS~Replicate+ (1|ID),grname=c("ID", "Fixed"), data= test5, datatype="Gaussian", nboot=1000, npermut=0)
print(rpt6)

#
#
#
#
#
#

#all the populations
# we add Population as fixed to take this variability into account

#
#
#



