### CDIS Shelter test = dimension 3 (Cumulative duration in shelter)

#install R v4 and R studio v 1.4
sessionInfo()
R.version

#https://www.r-project.org/ to install R last version (4.2.2)
#https://www.rstudio.com/products/rstudio/download/ to install R studio last version


# Prepare the working environment
getwd()
setwd("XXX")
ls()
rm(list = ls())
dev.off()

# Install and load the packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggpubr, tidyverse, DescTools, bestNormalize, lme4, lmerTest, Hmisc, data.table, lubridate, rptR, sjPlot, kableExtra, corrplot, PerformanceAnalytics, factoextra, knitr, psych, car, bestNormalize)

library(tidyverse)
library(data.table)
library(lubridate)
library(lme4)
library(lmerTest)
library(sjPlot)
library(rptR)
library(ggpubr)
library(psych)
library(car)
library(bestNormalize)


# Load the data
allData <- fread("https://raw.githubusercontent.com/fredsilvestre/LMM-case-study-master-BOE/main/Dataset_CDIS.csv", header = T, dec=",")# raw data (best to use)
View(allData)


#1° Preparation of the data

#rename the variables to use
test1 <- dplyr::rename(allData, c("CDIS"="Cumulative duration in shelter (s)", "ID"="Fish ID","Weight"="Fish Weight (g)", "Length"="Fish Standard length (cm)", "TempShelter"="Temperature for shelter test (°C)", "TimeShelter"="Time for shelter test (h)", "Replicate"="Replicat"))
test1
test1 <- test1[,c("Population", "ID", "Replicate", "Weight", "Length", "TempShelter", "TimeShelter", "CDIS")] #subset only the columns of interest

str(test1)

#we transform into factor the non-continuous variables
test1$`ID`=as.factor(test1$`ID`)
test1$`Population`=as.factor(test1$`Population`)
test1$`Replicate`=as.factor(test1$`Replicate`)

#we transform the time variable with lubridate
test1$`TimeShelter`=parse_date_time(test1$`TimeShelter`, "HM")
test1$`TimeShelter`=as.numeric(test1$`TimeShelter`)


test1 <- na.omit(test1) #delete the rows with NA in all the columns
test1 <- test1[Population=="EPP"| Population=="Long Caye" | Population== "Long Key" | Population== "Twin Cayes"] #subset the requested populations ; not necessary if we take all the populations
test1$Population<-factor(test1$Population,levels=c("EPP","Long Key","Long Caye","Twin Cayes")) #reorder the factors



#2° Exploration of the data

view(test1)
test1
summary(test1)
head(test1)
describeBy(test1, test1$Population)

# Average of each variable per population

table1 <- test1[,lapply(.SD, mean, na.rm=T), by=Population, .SDcols=c("Weight", "Length", "TempShelter", "TimeShelter", "CDIS")] 
table1

#Average of each variable per replicate

table2 <- test1[,lapply(.SD, mean, na.rm=T), by=Replicate, .SDcols=c("Weight", "Length", "TempShelter", "TimeShelter", "CDIS")]
table2

# Using Esquisse

devtools::install_github("dreamRs/esquisse")
esquisse::esquisser()




#3° Test ANOVA (simple linear model) on the effect of population (on 2 or 1 replicate)

subtest1 <- subset(test1, Replicate==1)

plot <- ggplot(test1) +
        aes(x = Population, y = CDIS) +
        geom_boxplot(notch=T, fill="#a50f15") +
        theme_light() +
        stat_summary(fun=mean, geom="point", shape=23, size=4)

plot1 <- ggplot(subtest1) +
        aes(x = Population, y = CDIS) +
        geom_boxplot(notch=T, fill="#a50f15") +
        theme_light() +
        stat_summary(fun=mean, geom="point", shape=23, size=4)

plot
plot1

anova <- lm(CDIS~Population, data=test1) # create the model
summary(anova) # view the results

hist(test1$CDIS) # distribution of the contineous variable

boxplot(anova[['residuals']],main='Boxplot: Residuals',ylab='residual value')

par(mfrow=c(2,2))
plot(anova) # assumptions of the model
par(mfrow=c(1,1))

bartlett.test(CDIS~Population, data=test1)
shapiro.test(resid(anova))

kruskal.test(CDIS~Population, data=test1) # non parametric

PostHocTest(aov(CDIS~Population,test1), method="hsd")



#4° Search for correlations between all explanatory variables

correlation <- rcorr(as.matrix(test1[,4:7]), type = "spearman") 
correlation
corrplot(correlation$r, type="upper", order="hclust", p.mat=correlation$P, sig.level=0.01, insig="blank", tl.cex=0.7  ,tl.col="black",tl.srt=45)
chart.Correlation(as.matrix(test1[,4:7]), histogram = T,pch=19)

# what are your conclusions ?


#5° search for extreme values

dotchart(test1$CDIS, main="CDIS", group=test1$Population)


#6° variables transformation

vignette("bestNormalize")

hist(XXX)
shapiro.test(XXX)



bestNormalize(XXX) 

#we try the model with XXX transformation for CDIS 


# add a new column
CDISyj <- XXX(test1$CDIS)
x2 <- predict(CDISyj)
test1 <- test1 %>% mutate(CDISyj=x2) #add the transformed variable

test1
hist(test1$CDISyj)
shapiro.test(test1$CDIS)




#7° Build the model

# the variables are: CDISyj as response ; Population, Replicate, TempShelter, Length, ID
# search for the best fixed structure using top-down strategy (as many fixed explanatory variables as possible) and choose the random effect (here there's only one)

M1 <- lmer(XXX, data=test1, REML=T)
summary(M1)
Anova(M1)
ranova(M1) # it's to check the random effect with the likelihood ratio test ; if the random variable is significant, it means that the model is worse without the random effect > keep the random effect.

#
#
#
#
#
#
#
#
#


anova <- anova(M9,M8,M7,M6,M5,M4,M3,M2,M1)
anova
# the best is XXX 

kbl <- kbl(anova)
kbl
table2 <- anova %>% kbl(caption="AOV") %>% kable_classic("striped",full_width=F) %>%
        column_spec(1, bold=T)
table2
save_kable(table2, file="aovCDIS.pdf") 


# Run the best model with REML=TRUE
Mbest <- lmer(XXX, data=test1, REML=T)
summary(Mbest)
ranova(Mbest)

tab <- tab_model(Mbest, p.val="kr", show.df=T, show.reflvl=T, p.style="stars")
tab
save_kable(tab, file="ICCCDIS.pdf") 
# https://strengejacke.github.io/sjPlot/articles/tab_model_estimates.html 


plot_model(M7)

png(file="Mbest.png") #to save the plot
plot_model(Mbest)
dev.off()


# What are our interpretation of the model ?

#
#
#
#




#8° Model validation


# Check for homogeneity of variance: residuals vs predicted values
plot(resid(Mbest)~fitted(Mbest), xlab="Predicted values", ylab="Normalized residuals")+
        abline(h=0, lty=2)

#Check for independence of residuals versus individual explanatory variables
op <- par(mfrow=c(2,2), mar=c(4,4,.5,.5))
plot(resid(Mbest)~test1$Replicate, xlab="Replicate", ylab="Normalized residuals")+
        abline(h=0, lty=2)
plot(resid(Mbest)~test1$Population, xlab="Population", ylab="Normalized residuals")+
        abline(h=0, lty=2)
plot(resid(Mbest)~test1$Length, xlab="Length", ylab="Normalized residuals")+
        abline(h=0, lty=2)
plot(resid(Mbest)~test1$TempShelter, xlab="TempShelter", ylab="Normalized residuals")+
        abline(h=0, lty=2)
par(op)

#Check for normality of residuals
hist(resid(Mbest))

qqnorm(resid(Mbest))
qqline(resid(Mbest))



#9° Model visualization

# Effects of population and replicate

plot2 <- ggplot(test1) +
        aes(x = Population, y = CDIS) +
        geom_boxplot(notch=T, fill="#a50f15") +
        theme_light() +
        stat_summary(fun=mean, geom="point", shape=23, size=4)

plot2

plot3 <- ggplot(test1) +
        aes(x = Replicate, y = CDIS) +
        geom_boxplot(notch=T, fill="#a50f15") +
        theme_light() +
        stat_summary(fun=mean, geom="point", shape=23, size=4)

plot3

plot4 <- ggplot(test1) +
        aes(x = Population, y = CDIS, colour = Replicate) +
        geom_boxplot(fill = "#112446") +
        scale_color_hue(direction = 1) +
        theme_minimal()

plot4



#10° Calculate conditional (adjusted) repeatability for each population (instead of agreement repeatability)
# The repeatability after controlling for the fixed effects.
#https://cran.r-project.org/web/packages/rptR/vignettes/rptR.html 

test5 <- test1[Population=="EPP"] 
rpt6 <- rpt(CDISyj~Replicate+ (1|ID),grname=c("ID", "Fixed"), data= test5, datatype="Gaussian", nboot=1000, npermut=0)
print(rpt6)

test6 <- test1[Population=="Long Key"] 
rpt7 <- rpt(CDISyj~Replicate+ (1|ID),grname=c("ID", "Fixed"), data= test6, datatype="Gaussian", nboot=1000, npermut=0)
print(rpt7)

test7 <- test1[Population=="Long Caye"] 
rpt8 <- rpt(CDISyj~Replicate+ (1|ID),grname=c("ID", "Fixed"), data= test7, datatype="Gaussian", nboot=1000, npermut=0)
print(rpt8)

test8 <- test1[Population=="Twin Cayes"] 
rpt9 <- rpt(CDISyj~Replicate+ (1|ID),grname=c("ID", "Fixed"), data= test8, datatype="Gaussian", nboot=1000, npermut=0)
print(rpt9)


plot(rpt9, cex.main=1)






